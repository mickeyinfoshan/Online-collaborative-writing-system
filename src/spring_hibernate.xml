<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="myds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/pad_for_real_data?characterEncoding=UTF-8" />
		<property name="user" value="root" />
		<property name="password" value="" />
		 <!--连接池中保留的最大连接数。默认值: 15 -->   
          <property name="maxPoolSize" value="20"/>  
          <!-- 连接池中保留的最小连接数，默认为：3-->  
          <property name="minPoolSize" value="2"/>  
          <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
          <property name="initialPoolSize" value="5"/>  
  
          <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
          <property name="maxIdleTime" value="60"></property>  
            
          <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
          <property name="checkoutTimeout" value="3000"/>  
            
          <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
          <property name="acquireIncrement" value="3"/>  
  
         <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
          <property name="acquireRetryAttempts" value="30"/>  
  
          <!--重新尝试的时间间隔，默认为：1000毫秒-->   
          <property name="acquireRetryDelay" value="1000" />  

	</bean>
	<!-- <bean id="mysf"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="myds" />
		<property name="mappingResources">
			<list>
				<value>user.hbm.xml</value>
				<value>group.hbm.xml</value>
				<value>pad.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect =org.hibernate.dialect.MySQLDialect
				hibernate.show_sql=true
				hibernate.hbm2ddl.auto=update
			</value>
		</property>
	</bean> -->
	
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="myds" />
		<!-- 这里真丑 但是hibernate3好像不支持package scan -->
		<!-- <property name="annotatedClasses">
     		<list>
       			<value>com.pad.entity.Comment</value>
       			<value>com.pad.entity.Course</value>
       			<value>com.pad.entity.Mission</value>
       			<value>com.pad.entity.MissionPad</value>
       			<value>com.pad.entity.CourseStudent</value>
       			<value>com.pad.entity.PublicPad</value>
       			<value>com.pad.entity.CoursePadGroup</value>
       			<value>com.pad.entity.PadGroupUser</value>
       			<value>com.pad.entity.User</value>
       			<value>com.pad.entity.Pad</value>
     		</list>
 		</property> -->
 		 <property name="packagesToScan" value="com.pad.entity" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect =org.hibernate.dialect.MySQLDialect
				hibernate.show_sql=true
				hibernate.hbm2ddl.auto=update
				hibernate.current_session_context_class=thread
			</value>
		</property>
	</bean>
	
	<!-- 事务加在dao 为了测试 -->
	<bean id="myTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="productServiceMethods" expression="execution(* com.pad.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="myTxManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<!-- <tx:method name="find*" propagation="REQUIRED" /> -->
			<tx:method name="join*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- spring系统启动以后，加载该类，查询所有数据 -->
	<bean class="com.pad.util.InitListener">
		<property name="userServiceImpl" ref="userServiceImpl"></property>
	</bean>
	<bean id="check" class="com.pad.filter.CheckFilter">
		<property name="userServiceImpl" ref="userServiceImpl"></property>
	</bean>
	<bean id="imageCodeFilter" class="com.pad.filter.ImageCodeFilter">
	</bean>
	
	<context:component-scan base-package="com.pad.api" />
</beans>